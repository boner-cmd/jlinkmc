name: Docker
on:
  schedule:
    - cron: '11 23 * * 6'
  push:
    branches:
      - master
#     - testing
  pull_request:

jobs:
  prepare:
    name: Build the builder and update the template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#        with:
#          ref: testing
      - name: Build and run the builder
        run: |
          docker build -t bone4cmdr/jlinkmc:builder ./sandbox
          docker run --name buildercon bone4cmdr/jlinkmc:builder
      - name: Grab built files
        run: |
          docker cp buildercon:/working/template ./builds/oldstable/Dockerfile
          docker cp buildercon:/working/template ./builds/stable/Dockerfile
      - name: Commit changes to repo
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Templates updated!" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: testing

  # Try to build different containers using script-built template container.
  trystable:
    needs: prepare
    name: Build the stable image, then tag and push to Docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
#        with:
#          ref: testing
      -
        name: Set up Docker Buildx
        uses: docker/docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./builds/stable/Dockerfile
          pull: true
          push: true
          build-args: JDK_VERSION=15
  # --cache-from args?
  # --cache-to args?
  # --no-cache?
          cache-from: type=registry,ref=ethco/jlinkmc:jdk15
          cache-to: type=inline
          tags: ethco/jlinkmc:stable,jdk15,latest

  tryoldstable:
    needs: prepare
    name: Build the old stable image, then tag and push to Docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
#        with:
#          ref: testing
      -
        name: Set up Docker Buildx
        uses: docker/docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./builds/oldstable/Dockerfile
          pull: true
          push: true
          build-args: JDK_VERSION=14
  # --cache-from args?
  # --cache-to args?
  # --no-cache?
          cache-from: type=registry,ref=ethco/jlinkmc:jdk14
          cache-to: type=inline
          tags: ethco/jlinkmc:oldstable,jdk14

  # JDK16 doesn't need the builder script due to native muslc code
  tryea:
    name: Build the early access image, then tag and push to Docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
#        with:
#          ref: testing
      -
        name: Set up Docker Buildx
        uses: docker/docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./builds/oldstable/Dockerfile
          pull: true
          push: true
          build-args: JDK_VERSION=16
  # --cache-from args?
  # --cache-to args?
  # --no-cache?
          cache-from: type=registry,ref=ethco/jlinkmc:jdk16
          cache-to: type=inline
          tags: ethco/jlinkmc:ea,jdk16
