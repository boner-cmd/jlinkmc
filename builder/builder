#!/bin/bash
# bash required to pass awk args in an array

find_pack() {
  # using sed because builtins would require iterating
  # GNU basic regular expressions (BREs) require \| to use alternation
  sedargs="s,<a href=\",,g; \
    s,</a>,,g; \
    /^<h\|^<b\|<\/\|sig/d; \
    s,\".*,,"
  readonly sedargs
  output="$(sed "${sedargs}" <(printf %s "${1}") \
    | sort \
    | tail -n 1)"
  printf "%s\n" "$output"
}

main() {
  if [ ! -e template ]; then
    echo "No template in current directory." 1>&2 && exit 1
  fi

  readonly GCC_BASE_URL="https://archive.archlinux.org/packages/g/gcc-libs"
  readonly GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases"
  readonly ZLIB_BASE_URL="https://archive.archlinux.org/packages/z/zlib"
  readonly SASHA_GERRAND_KEY_URL="https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub"

  GCC_FILENAME="$(curl -LfsS ${GCC_BASE_URL})" \
    && GCC_FILENAME="$(find_pack "${GCC_FILENAME}")" \
    && readonly GCC_FILENAME \
    || exit 1
  ZLIB_FILENAME="$(curl -LfsS ${ZLIB_BASE_URL})" \
    && ZLIB_FILENAME="$(find_pack "${ZLIB_FILENAME}")" \
    && readonly ZLIB_FILENAME \
    || exit 1
  GLIBC_VER="$(curl -sS ${GLIBC_BASE_URL}/latest)" \
    && GLIBC_VER="${GLIBC_VER#*tag/}" \
    && GLIBC_VER="${GLIBC_VER%\"*}" \
    && readonly GLIBC_VER \
    || exit 1

  readonly GCC_TAR_NAME="${GCC_FILENAME%????}"
  readonly GCC_FULL_URL="${GCC_BASE_URL}/${GCC_FILENAME}"
  readonly ZLIB_FULL_URL="${ZLIB_BASE_URL}/${ZLIB_FILENAME}"
  readonly GLIBC_FULL_URL="${GLIBC_BASE_URL}/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk"
  readonly GLIBC_BIN_URL="${GLIBC_BASE_URL}/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk"
  readonly GLIBC_I18N_URL="${GLIBC_BASE_URL}/download/${GLIBC_VER}/glibc-i18n-${GLIBC_VER}.apk"
  readonly GLIBC_FILENAME="glibc-$GLIBC_VER.apk"
  readonly GLIBC_BIN_FILENAME="glibc-bin-$GLIBC_VER.apk"
  readonly GLIBC_I18N_FILENAME="glibc-i18n-$GLIBC_VER.apk"
  readonly GCC_LIBS_VER="${GCC_FILENAME%\.pkg*}"
  readonly ZLIB_VER="${ZLIB_FILENAME%\.pkg*}"

  if [ ! -d working ]; then
    mkdir /working
  fi
  cp template /working/template
  cd /working || exit 1

  # file downloads are slow; output not suppressed to show script did not hang
  curl -Lf "${SASHA_GERRAND_KEY_URL}" -O \
    || exit 1
  curl -Lf "${GCC_FULL_URL}" -O \
    || exit 1
  curl -Lf "${GLIBC_FULL_URL}" "${GLIBC_BIN_URL}" "${GLIBC_I18N_URL}" -O -O -O \
    || exit 1
  curl -Lf "${ZLIB_FULL_URL}" -O \
    || exit 1

  declare -a sums
  for file in *; do
    sums+=("$(sha256sum "./${file}" | head -c 64)")
  done
  readonly sums

  # indices are hardcoded to assume only these six (6) files in this order:
  # GCC, GLIBC, GLIBC BIN, GLIBC I18N, Sasha Gerrand's RSA, ZLIB
  readonly GCC_FILE_SUM="${sums[0]}"
  readonly GLIBC_FILE_SUM="${sums[1]}"
  readonly GLIBC_BIN_SUM="${sums[2]}"
  readonly GLIBC_I18N_SUM="${sums[3]}"
  readonly SASHA_GERRAND_RSA_SUM="${sums[4]}"
  readonly ZLIB_FILE_SUM="${sums[5]}"

  sed -i "s,SASHA_GERRAND_RSA_SUM_,${SASHA_GERRAND_RSA_SUM},; \
    s,SASHA_GERRAND_KEY_URL_,${SASHA_GERRAND_KEY_URL},; \
    s,GCC_FULL_URL_,${GCC_FULL_URL},; \
    s,GCC_LIBS_VER_,${GCC_LIBS_VER},; \
    s,GCC_FILENAME_,${GCC_FILENAME},; \
    s,GCC_FILE_SUM_,${GCC_FILE_SUM},; \
    s,GCC_TAR_NAME_,${GCC_TAR_NAME},;
    s,GLIBC_FULL_URL_,${GLIBC_FULL_URL},; \
    s,GLIBC_VER_,${GLIBC_VER},; \
    s,GLIBC_FILENAME_,${GLIBC_FILENAME},; \
    s,GLIBC_FILE_SUM_,${GLIBC_FILE_SUM},; \
    s,GLIBC_BIN_URL_,${GLIBC_BIN_URL},; \
    s,GLIBC_BIN_FILENAME_,${GLIBC_BIN_FILENAME},; \
    s,GLIBC_BIN_SUM_,${GLIBC_BIN_SUM},; \
    s,GLIBC_I18N_URL_,${GLIBC_I18N_URL},; \
    s,GLIBC_I18N_FILENAME_,${GLIBC_I18N_FILENAME},; \
    s,GLIBC_I18N_SUM_,${GLIBC_I18N_SUM},; \
    s,ZLIB_FULL_URL_,${ZLIB_FULL_URL},; \
    s,ZLIB_VER_,${ZLIB_VER},; \
    s,ZLIB_FILENAME_,${ZLIB_FILENAME},; \
    s,ZLIB_FILE_SUM_,${ZLIB_FILE_SUM},;" template \
  || exit 1

  # stamp the generation date last
  readonly READY_DATE="$(date -R)"
  sed -i "s/DATE_/${READY_DATE}/" template \
  || exit 1

  cat template
}

main
exit 0
